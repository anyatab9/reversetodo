name: Build, Test, and Deploy on main Merge

on:
  workflow_run:
    workflows: ["CI - Feature to Dev"]
    types:
      - completed
 
# changess
jobs:
  build-test-deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run backend tests
        working-directory: ./backend
        run: npm test

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test




      - name: Install e2e dependencies
        working-directory: ./e2e-tests
        run: npm install

      - name: Start Application with Docker Compose
        working-directory: ./
        run: |
          docker compose up -d
          echo "Waiting for application to start..."
          sleep 30

      - name: Check if application is running
        run: |
          curl -v http://localhost:3000 || exit 1

      - name: Run E2E tests
        working-directory: ./e2e-tests
        env:
          NODE_ENV: test
        run: |
          # Installer ChromeDriver et lancer les tests Selenium
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q https://chromedriver.storage.googleapis.com/$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          export PATH=$PATH:/usr/local/bin/
          npm run test # Lancer les tests E2E avec Selenium
      - name: Push Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker tag reversetodo $DOCKER_USERNAME/reversetodo:latest
            docker push $DOCKER_USERNAME/reversetodo:latest
            

# small changes